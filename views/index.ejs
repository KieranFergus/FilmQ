<!DOCTYPE html>
<html>
  <head>
    <title>Home</title>
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>
    <!-- <script src="homepage.js"></script> -->
    <style rel href="styles.css"></style>

    <style>
      * {
        margin: 0px;
      }
      body {
        background: linear-gradient(to top, black, rgb(255, 133, 153));
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
      }

      header {
        background-color: rgba(0, 0, 0, 0.4);
        background-blend-mode: multiply;
        color: #fff;
        text-align: center;
        position: fixed;
        top: 0;
        z-index: 1;
        width: 100vw;
        height: 10%;
      }

      .center-item {
        display: inline-block;
      }
      .center-item img {
        height: 85px;
      }
      
      .left-item ,
      .right-item {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
      }

      .left-item img {
        height : 80px;

      }
      #search {
        color: red;
        width: 400px;
      }

      .right-item {
        right: 15px;
      }

      .random-big {
        height: 700px;
        width: 100%;
        background-color: #00ffff67;
        position: relative;
      }

      h2 {
        display: block;
        justify-content: center;
      }

      h1 {
        color: white;
        display: block;
        margin: 10px;
        font-size: 30px;
      }

      .movies-wrapper {
        display: flex;
        overflow-x: auto;
        width: 100%;
        padding: 20px;
        box-sizing: border-box;
        scroll-snap-type: x mandatory;
      }
      .movie {
        flex: 0 0 auto; /* Don't grow or shrink, maintain original size */
        margin-right: 10px; /* Add some spacing between images */
        height: 500px;
        width: 350px;
        scroll-snap-align: start; /* Align to the start of each image */
      }
      .movie:hover {
        cursor: pointer;
        opacity: 80%;
      }
      p {
        color: black;
        margin: 50% 0;
        text-align: center;
      }
      h4 {
        text-align: center;
        color: white;
        margin: 10px;
      }

      .close {
        cursor: pointer;
        position: relative;
        top: 0;
        right: 0;
        z-index: 1;
        font-size: large;
      }

      /* popup stuff */
      #nav {
        height: 80px;
        /* border: 1px solid black; */
      }

      #icon {
        float: right;
        height: 70px;
        width: 70px;
        padding: 2px;
        transition: 0.2s ease-in-out;
      }

      #icon:hover {
        transform: scale(1.05, 1.05);
      }

      #sidebar {
        position: fixed;
        top: 0;
        right: 0;
        padding: 15px;
        border-radius: 5px;
        float: right;
        background-image: url('images/theater.jpg');
        background-color: rgba(0, 0, 0, 0.9);
        background-blend-mode: multiply;
        width: 25%;
        transition: all 0.2s;
        z-index: 10;
        display: none;
      }

      #x-out {
        float: right;
        width: 20px;
        height: 20px;
        color: #fff;
        font-size: 30px;
        font-weight: 400;
        transition: 0.14s ease;
        padding-bottom: 5px;
      }

      #x-out:hover {
        transform: scale(1.1, 1.1);
        color: red;
        cursor: pointer;
      }

      #subheader {
        font-size: 30px;
        font-weight: 100;
        font-kerning: normal;
        color: #fff;
      }

      #empty {
        font-size: 20px;
        color: #fff;
        font-style: italic;
      }

      /*watchlist stuff*/
      ul {
        list-style: none;
        padding-left: 5px;
      }

      .title,
      .year,
      .genre,
      .blurb {
        color: #fff;
        transition: all 0.2s;
      }
      .title {
        font-size: 25px;
        font-weight: 500;
      }
      .year,
      .genre {
        font-style: italic;
        font-size: 15px;
      }

      .thumbnail {
        padding-top: 5px;
        height: 160px;
        width: 120px;
        transition: all 0.2s;
      }

      .blurb {
        width: 100%;
        padding-top: 4px;
        padding-bottom: 4px;
        padding-left: 5px;
        padding-right: 5px;
        text-align: left;
        font-size: 0px;
        border-bottom: 4px dotted white;
      }

      .blurb:hover {
        font-size: 15px;
        background-color: transparent;
      }

      .movie-cols {
        display: flex;
      }

      .info {
        padding-top: 10px;
      }

      /* Modal stuff*/

      .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
      }

      .close:hover,
      .close:focus {
        color: red;
        text-decoration: none;
        cursor: pointer;
      }
      .stream-title {
        font-size: 30px;
        font-weight: 100;
        font-kerning: normal;
        color: #fff;
        margin-bottom: 10px;
      }

      #streaming {
        list-style-type: none;
        padding: 0;
        columns: 2;
        -webkit-columns: 2;
        -moz-columns: 2;
        width: 300px;
      }

      #addToList {
        background-color: #4caf50; /* Green */
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        font-size: 16px;
        margin: 20px 10px;
        cursor: pointer;
        border-radius: 5px; /* Rounded corners */
        transition: background-color 0.3s ease; /* Smooth transition */

        display: flex;
      }

      #addToList:hover {
        background-color: #45a049; /* Darker green on hover */
      }
      #movieTitle {
        font-size: 50px;
        font-weight: 700; /* Make the font weight bolder */
        font-kerning: normal;
        color: #ffffff; /* Darken the text color for better contrast */
        text-align: left;
        line-height: 1.2; /* Improve readability by increasing line height */
        margin-bottom: 20px; /* Add some space below the title */
        text-transform: uppercase; /* Make the title uppercase */
        letter-spacing: 1px; /* Add some spacing between letters */
      }
      #closeModal {
        position: absolute;
        font-size: 48px;
        top: 10px;
        right: 10px;
      }

      #myModal {
        color: black;
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: left;
        align-items: left;
      }

      .modal-content {
        color: black;
        background: linear-gradient(
          to right,
          rgba(255, 141, 141, 0.9),
          rgba(255, 255, 255, 0)
        );
        padding: 20px;
        width: 40%;
        text-align: center;
      }
      h2 {
        color: black;
        text-align: left;
        display: block;
        margin-top: 20px;
      }
      #streaming ul li {
        display: block;
      }
      #modal-content ul {
        list-style-type: none;
        padding: 0;
      }
      #streaming img {
        display: block;
        margin: 0%;
        width: 100px;
      }

      #blurb {
        display: none;
        position: fixed;
        bottom: 0;
        right: 0;
        width: 60%;
        height: 25%;
        justify-content: right;
        align-items: right;
        background: linear-gradient(
          to left,
          rgba(0, 0, 0, 0.7) 70%,
          rgba(255, 255, 255, 0)
        );
      }
      #blurb p {
        font-size: 24px;
        color: white;
        text-align: left;
        display: block;
        margin-top: 0px;
        padding: 20px;
      }

      .random-big-title {
        font-size: 50px;
        font-weight: 700;
        font-kerning: normal;
        color: #ffffff;
        text-align: left;
        line-height: 1.2;
        text-transform: uppercase;
        letter-spacing: 1px;
        display: inline-block; /* Make the width fit the content */
        max-width: 60%; /* Limit the maximum width to 60% of the parent element */
        top: 0;
        left: 0;
        margin-top: 0px;
        padding-left: 10px;
        padding-top: 20px;
        padding-right: 10px;
        padding-bottom: 10px;

        background: linear-gradient(
          to right,
          rgba(255, 141, 141, 0.9),
          rgba(255, 255, 255, 0)
        );
      }
      .random-big-description {
        width: 97.2%;
        font-size: 24px;
        color: white;
        text-align: left;
        display: block;
        margin-top: 0px;
        padding: 20px;
        background: linear-gradient(
          to top,
          rgba(0, 0, 0, 0.7) 80%,
          rgba(255, 255, 255, 0)
        );
        position: absolute;
        bottom: 0;
        left: 0;
        margin: 0px;
        cursor: pointer;
      }
      .random-big {
        cursor: pointer;
      }
      .random-big.greyed-out::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-color: rgba(128, 128, 128, 0.2); /* Semi-transparent grey */
      }
    </style>
  </head>

  <body>
    <header>
        <a style="position: absolute; left: 15px;" href="/cineSwipe" class="left-item">
        <img id="logo2" alt="logo" src="tinderIcons/cards.png" />
      </a>

      <a class="center-item">
        <img id="logo" alt="logo" src="tinderIcons/cineswipe-logo.png" />
      </a>
      <div id="nav" class="right-item">
        <img
          id="icon"
          alt="burger menu"
          src="tinderIcons/list.png"
          onclick="openSidebar()"
        />
      </div>
    </header>

    <section style="margin-top: 5.65%">
      <div class="random-big">
        <h2 class="random-big-title"></h2>
        <p class="random-big-description"></p>
      </div>
    </section>

    <section>
      <h1>Top Movies</h1>
      <div class="movies-wrapper">
        <div class="movie popular"></div>
        <div class="movie popular"></div>
        <div class="movie popular"></div>
        <div class="movie popular"></div>
        <div class="movie popular"></div>
        <div class="movie popular"></div>
        <div class="movie popular"></div>
        <div class="movie popular"></div>
        <div class="movie popular"></div>
      </div>
    </section>

    <script>
      var user = JSON.parse('<%-JSON.stringify(data)%>');
      console.log(user);
      $(() => {
        $('.movie').on('click', openModal);
        $('#closeModal').on('click', closeModal);
        $('#addToList').on('click', addToWatchList);
        $('#icon').on('click', openSidebar);
        initBigImage();
      });
      const images_url = 'https://image.tmdb.org/t/p/original/';
      const providers_images_url = 'https://image.tmdb.org/t/p/original';
      const tmdb_api_key = 'e2978d1da72adcf778b7bc358679b035';
      const popular_url =
        'https://api.themoviedb.org/3/discover/movie?api_key=' +
        tmdb_api_key +
        '&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc';

      const options = {
        method: 'GET',
        headers: { accept: 'application/json' },
      };

      async function addToWatchList() {
        const movieId = $('#myModal').data('id');
        let movieData = await getMovieById(movieId);
        $('#your-queue').append(createWatchListHtml(movieData));
        user.watchlist.push(movieData.id);
        user = await updateUserInfo(user);
        console.log(user);
        closeModal();
      }
      async function updateUserInfo(user) {
        console.log('data to be sent back', user);
        var data = await fetch('api/updateUser', {
          method: 'POST',
          body: JSON.stringify(user),
          headers: {
            'Content-Type': 'application/json',
          },
        }).then((res) => res.json());

        console.log('data received', data);
        return data;
      }
      async function openDescription(movieId) {
        const blurb = await getBlurb(movieId);
        $('#movieBlurb').text(blurb);
      }

      async function openModal() {
        let movieId = $(this).data('id');
        let movieName = $(this).data('name');
        let movieBackground = $(this).data('background');

        $('#movieTitle').text(movieName);
        $('#myModal').css({
          'background-image': 'url(' + images_url + movieBackground + ')',
          'background-size': 'cover',
          'background-position': 'center center',
          'background-repeat': 'no-repeat',
        });

        const providers = await getProviders(movieId);
        const usProviders = providers.results.US;
        try {
          const streamingProviders = usProviders.flatrate.map((provider) => {
            return provider;
          });

          streamingProviders.forEach((provider) => {
            console.log(provider);
            let img = $(
              `<img src="${providers_images_url}${provider.logo_path}">`
            );
            img.css({
              width: '90px',
            });
            $('#streaming').append(img);
          });
          $('#streaming').append('<br>');
        } catch (err) {
          $('#streaming').text('No streaming providers available');

          console.log(err);
        }
        await openDescription(movieId);
        $('#myModal').css({ display: 'flex' });
        $('#myModal').data('id', movieId);
        $('#blurb').show();
        $('header').hide();
        closeSidebar();
      }

      function closeModal() {
        $('#streaming').empty();
        $('#myModal').hide();
        $('#blurb').hide();
        $('header').show();
      }

      function openSidebar() {
        $('#sidebar').show();
      }

      function closeSidebar() {
        $('#sidebar').hide();
      }

      async function getPopular() {
        try {
          let response = await fetch(popular_url, options);
          let data = await response.json();
          return data;
        } catch (err) {
          console.error('error:' + err);
        }
      }

      async function getRecommended() {
        let recommendedMovies = []
        for (let id of user.recs) {
            let temp = await getRecommendation(id);

            temp.forEach((item) => {
                let temp = item
                recommendedMovies.push(temp)
                console.log()
            })

        }
        return recommendedMovies;
      }

    async function getRecommendation(movieID) {
        /* Getting Current Recs for User from API */
        const url = 'https://api.themoviedb.org/3/movie/' + movieID + '/recommendations?language=en-US&page=1';
        const options = {
            method: 'GET',
            headers: {
            accept: 'application/json',
            Authorization: "Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNTMzYmUwNTdhYjMxOTJjMWEyNTQyYTEyZWU5YTFlNCIsInN1YiI6IjY1NmY0ZWIxMDg1OWI0MDEzOTUzNWJmOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.rbNhIQ_fM_lX8m2UgPb2jenhB2j7Z_g0b_A7rLxav-w"
            
            }
        };
        var currentRecs = []

        var data = await fetch(url, options)
            .then(res => res.json())
            .then(json => {
                var data = json.results;
                data.forEach( async (item) => {
                    currentRecs.push(await item.id);
                });

                return currentRecs
            })
            .catch(err => console.error('error:' + err))
        
        return await data

    }

      async function getProviders(movie_id) {
        const providers_url =
          'https://api.themoviedb.org/3/movie/' +
          movie_id +
          '/watch/providers?api_key=' +
          tmdb_api_key;

        try {
          let response = await fetch(providers_url, options);
          let data = await response.json();
          console.log(data);
          return data;
        } catch (err) {
          console.error('error:' + err);
        }
      }

      async function getMovieById(movie_id) {
        const blurb_url =
          'https://api.themoviedb.org/3/movie/' +
          movie_id +
          '?api_key=' +
          tmdb_api_key +
          '&language=en-US';

        try {
          let response = await fetch(blurb_url, options);
          let data = await response.json();
          console.log(data);
          return data;
        } catch (err) {
          console.error('error:' + err);
        }
      }
      async function getBlurb(movie_id) {
        return await getMovieById(movie_id).then((data) => {
          return data.overview;
        });
      }

      async function initBigImage() {
        let data = await getPopular();
        $('.random-big').css({
          'background-image':
            'url(' + images_url + data.results[0].backdrop_path + ')',
          'background-size': 'cover',
          'background-position': 'center center',
          'background-repeat': 'no-repeat',
        });
        $('.random-big-title').text(data.results[0].title);
        $('.random-big-description').text(data.results[0].overview);
      }

      async function getWatchListMovies() {
        const arr = [];

        for (let movieID of user.watchlist) {
          arr.push(await getMovieById(movieID));
        }

        console.log(arr);
        return arr;
      }

      function createWatchListHtml(movie) {
        return `
            <li>
              <div class="movie-item">
                <div class="movie-cols">
                  <div class="mini-column pic">
                    <img class="thumbnail" src="${
                      images_url + movie.poster_path
                    }" />
                  </div>
                  <div class="mini-column info">
                    <ul class="info-list">
                      <li class="title">${movie.title}</li>
                      <li class="year">${movie.release_date.substring(
                        0,
                        4
                      )}</li>
                    </ul>
                  </div>
                </div>
                <div class="blurb">
                  ${movie.overview}
                </div>
              </div>
            </li>
          `;
      }

      async function setWatchList() {
        let data = await getWatchListMovies();
        console.log(data);

        for (let movie of data) {
          let movieHTML = createWatchListHtml(movie);

          $('#your-queue').append(movieHTML);
        }
      }
      let index = 1;
      let intervalId; // Declare a variable to hold the interval ID
      let isRunning = false; // Declare a flag to track whether the interval is running

      async function setBigImage() {
        let data = await getPopular();
        intervalId = setInterval(function () {
          $('.random-big').fadeOut(1000, function () {
            // Fade out over 0.5 seconds
            $(this).css({
              'background-image':
                'url(' + images_url + data.results[index].backdrop_path + ')',
              'background-size': 'cover',
              'background-position': 'center center',
              'background-repeat': 'no-repeat',
            });
            $('.random-big-title').text(data.results[index].title);
            $('.random-big-description').text(data.results[index].overview);
            $(this).fadeIn(500); // Fade in over 0.5 seconds
          });

          index = (index + 1) % data.results.length;
          isRunning = true;
        }, 5000);
      }

      $('.random-big').click(function () {
        if (isRunning) {
          clearInterval(intervalId);
          isRunning = false;
          $(this).addClass('greyed-out'); // Add the 'greyed-out' class when the interval stops
        } else {
          setBigImage();
          $(this).removeClass('greyed-out'); // Remove the 'greyed-out' class when the interval starts
        }
      });
      async function setPopularMovies() {
        let data = await getPopular();
        $('.movie.popular').each(function (index) {
          if (index < data.results.length) {
            $(this).css({
              'background-image':
                'url(' + images_url + data.results[index].poster_path + ')',
              'background-size': 'cover',
              'background-position': 'center center',
              'background-repeat': 'no-repeat',
            });
            $(this).attr('data-id', data.results[index].id);
            $(this).attr('data-name', data.results[index].title);
            $(this).attr('data-background', data.results[index].backdrop_path);
          }
        });
      }

    async function setYouPicks() {
        let data = await getRecommended();
        console.log(data)
        let indices = getRandomNumbers(parseInt(data.length))
        // console.log(indices)
        // var yourMovies = []

        //  for (let idx of indices) {
        //     let movieDatum = await getMovie(data[idx])
        //     yourMovies.push(movieDatum)
        //  }
        //  console.log(yourMovies)

         $(".movie.picks").each(async function (index) {
            const curr = await getMovie(data[indices[index]])
            $(this).css({
              "background-image":
                "url(" + images_url + curr.poster_path + ")",
              "background-size": "cover",
              "background-position": "center center",
              "background-repeat": "no-repeat",
            });
            $(this).attr("data-id", curr.id);
            $(this).attr("data-name", curr.title);
            $(this).attr("data-background", curr.backdrop_path);
          
        });
        
}
                    
async function getMovie(movie_id) {
        const blurb_url =
          "https://api.themoviedb.org/3/movie/" +
          movie_id +
          "?api_key=" +
          tmdb_api_key +
          "&language=en-US";

        try {
          let response = await fetch(blurb_url, options);
          let data = await response.json();

          return data;
        } catch (err) {
          console.error("error:" + err);
        }
    }

    function getRandomNumbers(maxNumber) {
        console.log(maxNumber)
        if (!Number.isInteger(maxNumber) || maxNumber <= 0) {
            console.error("Input should be a positive integer.");
            return [];
        }

        const numbers = [];
        const maxExclusive = maxNumber + 1;

        while (numbers.length < 9) {
            const randomNumber = Math.floor(Math.random() * maxExclusive);

            if (!numbers.includes(randomNumber)) {
            numbers.push(randomNumber);
            }
        }

        return numbers;
    }

    setYouPicks();

      setBigImage();
      setPopularMovies();
      setWatchList();

      // setTinderMovies();
    </script>

    <section>
      <h1>Your Picks</h1>
      <div class="movies-wrapper">
        <div class="movie picks"></div>
        <div class="movie picks"></div>
        <div class="movie picks"></div>
        <div class="movie picks"></div>
        <div class="movie picks"></div>
        <div class="movie picks"></div>
        <div class="movie picks"></div>
        <div class="movie picks"></div>
        <div class="movie picks"></div>
      </div>
    </section>

    <div id="myModal">
      <div class="modal-content">
        <h2 id="movieTitle"></h2>
        <span class="close" id="closeModal">&times; </span>
        <h2 class="stream-title">Where to stream:</h2>
        <ul id="streaming"></ul>
        <button id="addToList">Add to watchlist</button>
      </div>
    </div>
    <div id="blurb">
      <p id="movieBlurb"></p>
    </div>

    <!-- sidebar stuff -->

    <div id="sidebar">
      <div id="x-out" onclick="closeSidebar()">&#x2715;</div>

      <div id="subheader">Your Watchlist</div>

      <div id="empty"></div>

      <ul id="your-queue"></ul>

      <div id="logout">
        <form action="/logout?_method=DELETE" method="POST">
          <button type="submit">Log Out</button>
        </form>
      </div>
    </div>
  </body>
</html>

<!-- <li>
          <div class="movie-item">
            <div class="movie-cols">
              <div class="mini-column pic">
                <img
                  class="thumbnail"
                  src="images/totoro.jpg" />
              </div>
              <div class="mini-column info">
                <ul class="info-list">
                  <li class="title">Totoro</li>
                  <li class="year">1988</li>
                  <li class="genre">Anime</li>
                </ul>
              </div>
            </div>
            <div class="blurb">
              My Neighbor Totoro is a 1988 Japanese animated fantasy film
              written and directed by Hayao Miyazaki and animated by Studio
              Ghibli for Tokuma Shoten.
            </div>
          </div>
        </li>

        <li>
          <div class="movie-item">
            <div class="movie-cols">
              <div class="mini-column pic">
                <img
                  class="thumbnail"
                  src="images/totoro.jpg" />
              </div>
              <div class="mini-column info">
                <ul class="info-list">
                  <li class="title">Totoro</li>
                  <li class="year">1988</li>
                  <li class="genre">Anime</li>
                </ul>
              </div>
            </div>
            <div class="blurb">
              My Neighbor Totoro is a 1988 Japanese animated fantasy film
              written and directed by Hayao Miyazaki and animated by Studio
              Ghibli for Tokuma Shoten.
            </div>
          </div>
        </li>

        <li>
          <div class="movie-item">
            <div class="movie-cols">
              <div class="mini-column pic">
                <img
                  class="thumbnail"
                  src="images/totoro.jpg" />
              </div>
              <div class="mini-column info">
                <ul class="info-list">
                  <li class="title">Totoro</li>
                  <li class="year">1988</li>
                  <li class="genre">Anime</li>
                </ul>
              </div>
            </div>
            <div class="blurb">
              My Neighbor Totoro is a 1988 Japanese animated fantasy film
              written and directed by Hayao Miyazaki and animated by Studio
              Ghibli for Tokuma Shoten.
            </div>
          </div>
        </li> -->
